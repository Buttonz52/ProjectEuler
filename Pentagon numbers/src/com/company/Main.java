package com.company;

import java.util.ArrayList;
import java.util.List;

public class Main {

    public static void main(String[] args) {

        List<Long> pNums = new ArrayList<>();

        generatePentagonalNumbers(3000,pNums);

        System.out.println("Done");

        long smallest = 999999999;

        for(int i = 0; i < pNums.size(); i++)
        {
            for (int j = 0; j < pNums.size() && i!=j; j++)
            {
                long S = pNums.get(i) + pNums.get(j);
                long D = pNums.get(i) - pNums.get(j);

                if(checkPent(S) && checkPent(D) && (D) < smallest)
                {
                    smallest = D;
                }

                System.out.println(i);

            }
        }

        System.out.println(smallest);
    }

    public static void generatePentagonalNumbers(int numToGen, List<Long> pNums)
    {
        for (int i = 1; i < numToGen+1; i++)
        {
            long p = i*((3*i)-1) / 2;
            pNums.add(p);
        }
    }

    public static boolean checkPent(long n)
    {
        double perSqr = Math.sqrt(24*n+1);
        if(perSqr % 6 == 5)
            return true;
        else
            return false;
    }
}
//Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
//
//1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//
//It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
//However, their difference, 70 − 22 = 48, is not pentagonal.
//
//Find the pair of pentagonal numbers, Pj and Pk, for which
//their sum and difference are pentagonal and D = |Pk − Pj|
//is minimised; what is the value of D?